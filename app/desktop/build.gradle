plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Latest version of the Shadow plugin
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

def version = "0.0.2"
def javaFXVersion = '21'

dependencies {
    // Sphinx4 Speech-to-Text:
    compileOnly group: 'edu.cmu.sphinx', name: 'sphinx4-core', version:'5prealpha-SNAPSHOT'
    compileOnly group: 'edu.cmu.sphinx', name: 'sphinx4-data', version:'5prealpha-SNAPSHOT'
    // JavaFX dependencies for cross-platform use
    // multi-platform support:
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.${javaFXVersion}:win"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.${javaFXVersion}:linux"
    runtimeOnly "org.openjfx:javafx-graphics:$javafx.${javaFXVersion}:mac"
}

java {
    modularity.inferModulePath = true
}

javafx {
    version = javaFXVersion
    modules = [ 'javafx.controls' ]
}
mainClassName = 'shikigami.Shikigami'

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'shikigami.Launcher'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

// Shadow JAR configuration
//shadowJar {
//    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
//    archiveBaseName.set('Shikigami')
//    archiveClassifier.set('shadow')
//    archiveVersion.set(version)
//    configurations = [project.configurations.runtimeClasspath]
//    mergeServiceFiles() // Necessary for JavaFX compatibility in the bundled JAR
//    from {
//        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}
